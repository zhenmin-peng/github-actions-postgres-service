name: PostgreSQL
on: push

env:
  DOTNET_SDK_VERSION: 6.0.101
  DOTNET_EF_VERSION: 6.0.1
  SRC_DIR: ./src

jobs:
  postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Create database
        run: psql -h localhost -U postgres -c 'CREATE DATABASE "ci_bots";'
        env:
          PGPASSWORD: postgres
      - name: Setup database
        run: sed -e "s/:db_username/mytestuser/" -e "s/:db_password/password123/" configure_database.sql | psql -h localhost -U postgres -d ci_bots
        env:
          PGPASSWORD: postgres
      - name: Alter and run migration script
        run: sed "s|SELECT create_hypertable|PERFORM create_hypertable|g" migration.sql | psql -h localhost -d ci_bots -U postgres
        env:
          PGPASSWORD: postgres
      - name: Query database - list all schemas
        run: psql -h localhost -d ci_bots -U postgres -c 'select schema_name from information_schema.schemata;'
        env:
          PGPASSWORD: postgres
      - name: Query database - list all tables in public schema
        run: psql -h localhost -d ci_bots -U postgres -c "SELECT * FROM information_schema.tables WHERE table_schema = 'public';"
        env:
          PGPASSWORD: postgres